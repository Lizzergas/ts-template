# OpenAI API Integration

## Client Setup
- Use OpenAI client with API key from environment via [utils/env.ts](mdc:utils/env.ts)
- Configure OpenAI client with standard fetch options

## Streaming Responses
- Use `stream: true` for real-time response handling
- Handle different chunk types: `response.output_text.delta`, `response.completed`
- Process text deltas incrementally for streaming output
- Implement token counting and formatting for better UX

## Error Handling
- Validate environment variables with Zod schemas
- Provide clear error messages for missing API keys
- Use proper TypeScript types for OpenAI responses

## Development Patterns
- Use `tsx` for development with hot reloading
- Implement proper logging for configuration
- Use environment-based configuration for different deployment scenarios
description:
globs:
alwaysApply: false
---
